name: Build Samsung A06 Kernel (KSU Next + SUSFS)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 120

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y git wget build-essential bc bison flex \
            libssl-dev libelf-dev ccache unzip python3 clang llvm lld dos2unix

      - name: Download Kernel Source (Release)
        run: |
          wget -O kernel.tar "https://github.com/huyzilo77-bot/Bufffkernela065g/releases/download/V1/kernel-5.15.tar"
          mkdir kernel-5.15
          tar -xf kernel.tar -C kernel-5.15 --strip-components=1

      - name: Fetch ABI whitelist from AOSP GKI
        run: |
          git clone --depth=1 https://android.googlesource.com/kernel/common -b android13-5.15 gki-common
          echo "üìÇ Files in gki-common/android/"
          ls -la gki-common/android/ | grep abi_gki_aarch64 || true

          # T·ª± ƒë·ªông ch·ªçn file ABI ph√π h·ª£p
          ABI_FILE=$(ls gki-common/android/abi_gki_aarch64_mtk || ls gki-common/android/abi_gki_aarch64_general || echo "")
          if [ -z "$ABI_FILE" ]; then
            echo "‚ö†Ô∏è Kh√¥ng t√¨m th·∫•y file ABI, t·∫°o file tr·ªëng"
            touch kernel-5.15/abi_symbollist.raw
          else
            cp "$ABI_FILE" kernel-5.15/abi_symbollist.raw
            echo "‚úÖ Copied ABI file: $ABI_FILE"
          fi
          ls -l kernel-5.15/abi_symbollist.raw || true

      - name: Clone utilities (AnyKernel3 & SUSFS)
        run: |
          git clone https://github.com/osm0sis/AnyKernel3.git AnyKernel3
          git clone -b gki-android13-5.15 https://gitlab.com/simonpunk/susfs4ksu.git susfs

      - name: Apply KernelSU-Next
        run: |
          cd kernel-5.15
          curl -LSs "https://raw.githubusercontent.com/KernelSU-Next/KernelSU-Next/next/kernel/setup.sh" | bash -

      - name: Apply SUSFS patch
        run: |
          cd kernel-5.15
          patch -p1 < ../susfs/kernel_patches/50_add_susfs_in_gki-android13-5.15.patch || true
          cp -r ../susfs/kernel_patches/fs/* fs/ || true
          cp -r ../susfs/kernel_patches/include/linux/* include/linux/ || true

      - name: Fix Kconfig encoding
        run: |
          cd kernel-5.15
          find drivers -name "Kconfig" -exec dos2unix {} \;
          sed -i "s/‚Äô/'/g" drivers/input/sar/sx937x/Kconfig || true
          sed -i "s/‚Äô/'/g" drivers/input/sar/stk501xx/Kconfig || true
          sed -i 's/^[ \t]*//' drivers/power/supply/Kconfig || true

      - name: Select defconfig
        run: |
          cd kernel-5.15
          if [ -f "arch/arm64/configs/a06x_defconfig" ]; then
            DEFCONFIG=a06x_defconfig
          elif [ -f "arch/arm64/configs/a06_defconfig" ]; then
            DEFCONFIG=a06_defconfig
          else
            echo "‚ùå Kh√¥ng t√¨m th·∫•y defconfig cho A06!"
            exit 1
          fi
          echo "‚úÖ D√πng defconfig: $DEFCONFIG"
          echo "DEFCONFIG=$DEFCONFIG" >> $GITHUB_ENV

      - name: Build Kernel
        run: |
          cd kernel-5.15
          chmod +x -R ./scripts
          make O=out ARCH=arm64 $DEFCONFIG
          make -j$(nproc --all) O=out ARCH=arm64 \
            CC=clang CROSS_COMPILE=aarch64-linux-gnu- LD=ld.lld

      - name: Pack AnyKernel3 zip
        run: |
          cp kernel-5.15/out/arch/arm64/boot/Image AnyKernel3/Image
          cd AnyKernel3
          zip -r ../Kernel-A06-KSU-SUSFS.zip ./*

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Kernel-A06-KSU-SUSFS
          path: |
            *.zip
            kernel-5.15/out/arch/arm64/boot/Image
