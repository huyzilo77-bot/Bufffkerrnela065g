name: Build Samsung A06 Kernel (KSU Next + SUSFS)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 120

    steps:
      # ------------------------------------------------------------------
      - name: Checkout repo
        uses: actions/checkout@v4
      # ------------------------------------------------------------------

      - name: Install dependencies (the same as ravindu64 tutorial)
        run: |
          sudo apt update
          sudo apt install -y git device-tree-compiler lz4 xz-utils zlib1g-dev \
            openjdk-17-jdk gcc g++ python3 python-is-python3 p7zip-full \
            android-sdk-libsparse-utils erofs-utils default-jdk git gnupg \
            flex bison gperf build-essential zip curl libc6-dev libncurses-dev \
            libx11-dev libreadline-dev libgl1 libgl1-mesa-dev python3 make sudo \
            gcc g++ bc grep tofrodos python3-markdown libxml2-utils xsltproc \
            libtinfo6 make repo cpio kmod openssl libelf-dev pahole libssl-dev \
            libarchive-tools zstd rsync --fix-missing
          # Fix libtinfo for Ubuntu
          wget http://security.ubuntu.com/ubuntu/pool/universe/n/ncurses/libtinfo5_6.3-2ubuntu0.1_amd64.deb
          sudo dpkg -i libtinfo5_6.3-2ubuntu0.1_amd64.deb
      # ------------------------------------------------------------------

      - name: Download Kernel Source (Release)
        run: |
          wget -O kernel.tar "https://github.com/huyzilo77-bot/Bufffkerrnela065g/releases/download/V1/kernel-5.15.tar"
      - name: Extract Kernel Source
        run: |
          mkdir -p kernel-5.15
          tar -xf kernel.tar -C kernel-5.15 --strip-components=1

      - name: Clone utilities (AnyKernel3 & SUSFS)
        run: |
          git clone https://github.com/osm0sis/AnyKernel3.git AnyKernel3
          git clone -b gki-android13-5.15 https://gitlab.com/simonpunk/susfs4ksu.git susfs

      - name: Apply KernelSU-Next
        run: |
          cd kernel-5.15
          curl -LSs "https://raw.githubusercontent.com/KernelSU-Next/KernelSU-Next/next/kernel/setup.sh" | bash - || true

      - name: Apply SUSFS patch
        run: |
          cd kernel-5.15
          patch -p1 < ../susfs/kernel_patches/50_add_susfs_in_gki-android13-5.15.patch || true
          cp -r ../susfs/kernel_patches/fs/* fs/ || true
          cp -r ../susfs/kernel_patches/include/linux/* include/linux/ || true

      - name: Fix Kconfig encoding (sanitize quotes/whitespace)
        run: |
          cd kernel-5.15
          find drivers -name "Kconfig*" -type f -print0 | xargs -0 sed -i "s/’/'/g; s/‘/'/g"
          sed -i 's/^[[:space:]]*#/#/' drivers/power/supply/Kconfig || true

      - name: Build Kernel (A06 defconfig)
        run: |
          set -euo pipefail
          cd kernel-5.15
          if [ -f arch/arm64/configs/a06x_defconfig ]; then
            DEFCONFIG=a06x_defconfig
          elif [ -f arch/arm64/configs/a06_defconfig ]; then
            DEFCONFIG=a06_defconfig
          else
            echo "❌ Không tìm thấy defconfig!"
            exit 1
          fi

          make O=out ARCH=arm64 "$DEFCONFIG"
          make O=out ARCH=arm64 olddefconfig </dev/null

          echo "✅ .config sinh ra:"
          head -n 20 out/.config || true

          make -j"$(nproc)" O=out ARCH=arm64 \
            CC=clang CROSS_COMPILE=aarch64-linux-gnu- LD=ld.lld \
            Image dtbs modules 2>&1 | tee build.log

          if [ -f out/arch/arm64/boot/Image ]; then
            echo "✅ Build thành công: Image"
          elif [ -f out/arch/arm64/boot/Image.gz-dtb ]; then
            echo "✅ Build thành công: Image.gz-dtb"
          else
            echo "❌ Build xong nhưng không có Image!"
            exit 1
          fi

      - name: Pack AnyKernel3 zip
        run: |
          IMG=$(ls kernel-5.15/out/arch/arm64/boot/Image* 2>/dev/null || true)
          if [ -z "$IMG" ]; then
            echo "❌ Không tìm thấy Image!"
            exit 1
          fi
          cp "$IMG" AnyKernel3/Image
          (cd kernel-5.15/out/arch/arm64/boot && cp -r dtb* ../../../../AnyKernel3/ || true)
          (cd kernel-5.15/out/arch/arm64/boot && cp -r dtbo* ../../../../AnyKernel3/ || true)
          cd AnyKernel3
          zip -r ../Kernel-A06-KSU-SUSFS.zip ./*

      - name: Upload artifacts (config + zip + image + log)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: Kernel-Outputs
          path: |
            kernel-5.15/out/.config
            kernel-5.15/out/arch/arm64/boot/Image*
            Kernel-A06-KSU-SUSFS.zip
            kernel-5.15/build.log
