name: Build Kernel GKI2.0

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            git build-essential bc curl wget \
            flex bison libssl-dev libelf-dev \
            python3 python3-pip ccache unzip zip tar xz-utils

      - name: Parse config
        id: cfg
        run: |
          CONFIG_FILE=".github/configs/a06.json"
          echo "KERNEL_REPO=$(jq -r '.kernelSource.repo' $CONFIG_FILE)" >> $GITHUB_ENV
          echo "KERNEL_BRANCH=$(jq -r '.kernelSource.branch' $CONFIG_FILE)" >> $GITHUB_ENV
          echo "DEFCONFIG=$(jq -r '.kernelSource.defconfig' $CONFIG_FILE)" >> $GITHUB_ENV
          echo "DEVICE=$(jq -r '.kernelSource.device' $CONFIG_FILE)" >> $GITHUB_ENV
          echo "KSUNEXT=$(jq -r '.kernelsu.setupLink' $CONFIG_FILE)" >> $GITHUB_ENV
          echo "SUSFSLINK=$(jq -r '.kernelsu.susfsLink' $CONFIG_FILE)" >> $GITHUB_ENV

      - name: Clone kernel source
        run: |
          git clone --depth=1 -b $KERNEL_BRANCH $KERNEL_REPO kernel
          cd kernel
          echo "Kernel commit: $(git rev-parse HEAD)"

      - name: Apply KernelSU Next + SUSFS
        run: |
          cd kernel
          curl -LSs $KSUNEXT | bash -s .
          curl -L $SUSFSLINK -o susfs.patch
          patch -p1 < susfs.patch || true

      - name: Build kernel
        run: |
          cd kernel
          export ARCH=arm64
          export SUBARCH=arm64
          export CC=clang
          export CROSS_COMPILE=aarch64-none-linux-gnu-
          export PATH=$PATH:$HOME/clang/bin:$HOME/gcc/bin
          make O=out $DEFCONFIG
          make O=out -j$(nproc)

      - name: Pack with AnyKernel3
        run: |
          git clone --depth=1 https://github.com/osm0sis/AnyKernel3
          cp kernel/out/arch/arm64/boot/Image AnyKernel3/
          cd AnyKernel3
          zip -r9 AnyKernel3.zip *

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: kernel-gki2.0-${{ env.DEVICE }}
          path: AnyKernel3/AnyKernel3.zip
