name: Build Samsung A06 Kernel (KSU + SUSFS + Real ABI)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 120

    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y git wget build-essential bc bison flex \
            libssl-dev libelf-dev ccache python3 clang llvm lld

      - name: Download Kernel Source
        run: |
          wget -O kernel.tar "https://github.com/huyzilo77-bot/Bufffkerrnela065g/releases/download/V1/kernel-5.15.tar"

      - name: Extract Kernel Source
        run: |
          mkdir kernel-5.15
          tar -xf kernel.tar -C kernel-5.15 --strip-components=1

      - name: Fetch ABI whitelist from AOSP GKI
        run: |
          git clone --depth=1 https://android.googlesource.com/kernel/common -b android13-5.15-2025-03_r5 gki-common
          echo "📂 Files in gki-common/android/"
          ls -la gki-common/android | grep abi || true
          
          # Copy đúng file ABI cho MediaTek
          cp gki-common/android/abi_gki_aarch64_mediatek kernel-5.15/abi_symbollist.raw
          echo "[INFO] Copied abi_gki_aarch64_mediatek -> abi_symbollist.raw"
          ls -l kernel-5.15/abi_symbollist.raw

      - name: Debug defconfigs
        run: |
          echo "📂 Listing defconfigs in arch/arm64/configs:"
          ls -la kernel-5.15/arch/arm64/configs || true

      - name: Clone utilities (AnyKernel3 & SUSFS)
        run: |
          git clone https://github.com/osm0sis/AnyKernel3.git AnyKernel3
          git clone -b gki-android13-5.15 https://gitlab.com/simonpunk/susfs4ksu.git susfs

      - name: Apply KernelSU-Next
        run: |
          cd kernel-5.15
          curl -LSs https://raw.githubusercontent.com/KernelSU-Next/KernelSU-Next/next/kernel/setup.sh | bash -

      - name: Apply SUSFS patch
        run: |
          cd kernel-5.15
          patch -p1 < ../susfs/kernel_patches/50_add_susfs_in_gki-android13-5.15.patch || true
          cp -r ../susfs/kernel_patches/fs/* fs/ || true
          cp -r ../susfs/kernel_patches/include/linux/* include/linux/ || true

      - name: Select defconfig
        run: |
          cd kernel-5.15
          if [ -f arch/arm64/configs/a06x_defconfig ]; then DEFCONFIG=a06x_defconfig
          elif [ -f arch/arm64/configs/a06_defconfig ]; then DEFCONFIG=a06_defconfig
          else echo "❌ Không tìm thấy defconfig"; exit 1; fi
          echo "DEFCONFIG=$DEFCONFIG" >> $GITHUB_ENV
          echo "✅ Sử dụng defconfig: $DEFCONFIG"

      - name: Build Kernel
        run: |
          cd kernel-5.15
          chmod +x -R scripts
          make O=out ARCH=arm64 $DEFCONFIG
          make -j$(nproc) O=out ARCH=arm64 \
            CC=clang CROSS_COMPILE=aarch64-linux-gnu- LD=ld.lld

      - name: Pack AnyKernel3 zip
        run: |
          cp kernel-5.15/out/arch/arm64/boot/Image AnyKernel3/Image
          [ -f kernel-5.15/out/arch/arm64/boot/dtb ] && cp kernel-5.15/out/arch/arm64/boot/dtb AnyKernel3/dtb
          [ -f kernel-5.15/out/arch/arm64/boot/dtbo.img ] && cp kernel-5.15/out/arch/arm64/boot/dtbo.img AnyKernel3/dtbo.img
          cd AnyKernel3 && zip -r ../Kernel-A06-KSU-SUSFS.zip ./*

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Kernel-A06-KSU-SUSFS
          path: |
            *.zip
            kernel-5.15/out/arch/arm64/boot/Image
            kernel-5.15/out/arch/arm64/boot/dtb
            kernel-5.15/out/arch/arm64/boot/dtbo.img
