name: Build Samsung A06 Kernel (KSU Next + SUSFS)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 120

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y git wget build-essential bc bison flex \
            libssl-dev libelf-dev ccache unzip zip python3 curl \
            device-tree-compiler lz4 xz-utils zlib1g-dev openjdk-17-jdk \
            gcc g++ python3 python-is-python3 p7zip-full \
            android-sdk-libsparse-utils erofs-utils default-jdk gnupg gperf \
            libc6-dev libncurses-dev libx11-dev libreadline-dev \
            libgl1 libgl1-mesa-dev python3-markdown libxml2-utils xsltproc \
            make repo cpio kmod pahole libarchive-tools zstd --fix-missing

          # Fix thi·∫øu libtinfo5 tr√™n Ubuntu 22/24
          wget http://security.ubuntu.com/ubuntu/pool/universe/n/ncurses/libtinfo5_6.3-2ubuntu0.1_amd64.deb
          sudo dpkg -i libtinfo5_6.3-2ubuntu0.1_amd64.deb

      - name: Setup Neutron-Clang
        run: |
          mkdir -p $HOME/toolchains/neutron-clang
          cd $HOME/toolchains/neutron-clang
          curl -LO "https://raw.githubusercontent.com/Neutron-Toolchains/antman/main/antman"
          chmod +x antman
          bash antman -S
          bash antman --patch=glibc
          cd $GITHUB_WORKSPACE

          echo "$HOME/toolchains/neutron-clang/bin" >> $GITHUB_PATH

      - name: Download Kernel Source (Samsung A06)
        run: |
          wget -O kernel.tar "https://github.com/huyzilo77-bot/Bufffkerrnela065g/releases/download/V1/kernel-5.15.tar"
          mkdir kernel-5.15
          tar -xf kernel.tar -C kernel-5.15 --strip-components=1

      - name: Clone utilities (AnyKernel3 & SUSFS)
        run: |
          git clone https://github.com/osm0sis/AnyKernel3.git AnyKernel3
          git clone -b gki-android13-5.15 https://gitlab.com/simonpunk/susfs4ksu.git susfs

      - name: Apply KernelSU-Next
        run: |
          cd kernel-5.15
          curl -LSs "https://raw.githubusercontent.com/KernelSU-Next/KernelSU-Next/next/kernel/setup.sh" | bash -

      - name: Apply SUSFS patch
        run: |
          cd kernel-5.15
          patch -p1 < ../susfs/kernel_patches/50_add_susfs_in_gki-android13-5.15.patch || true
          cp -r ../susfs/kernel_patches/fs/* fs/ || true
          cp -r ../susfs/kernel_patches/include/linux/* include/linux/ || true

      - name: Build Kernel (A06 defconfig)
        shell: bash
        run: |
          set -euo pipefail
          cd kernel-5.15

          DEFCONFIG="a06x_defconfig"
          if [ ! -f arch/arm64/configs/$DEFCONFIG ]; then
            DEFCONFIG="a06_defconfig"
          fi
          echo "üëâ D√πng defconfig: $DEFCONFIG"

          # T·∫°o .config
          make O=out ARCH=arm64 $DEFCONFIG \
            CC=clang CROSS_COMPILE=aarch64-linux-gnu- LLVM=1 LLVM_IAS=1
          yes "" | make O=out ARCH=arm64 olddefconfig </dev/null

          # Build kernel
          make -j$(nproc --all) O=out ARCH=arm64 \
            CC=clang CROSS_COMPILE=aarch64-linux-gnu- LLVM=1 LLVM_IAS=1 \
            Image dtbs modules 2>&1 | tee build.log

          # Ki·ªÉm tra output
          if [ -f out/arch/arm64/boot/Image ]; then
            echo "‚úÖ Build th√†nh c√¥ng: Image"
          elif [ -f out/arch/arm64/boot/Image.gz-dtb ]; then
            echo "‚úÖ Build th√†nh c√¥ng: Image.gz-dtb"
          else
            echo "‚ùå Build xong nh∆∞ng kh√¥ng c√≥ Image!"
            exit 1
          fi

      - name: Pack AnyKernel3 zip
        run: |
          IMG=$(ls kernel-5.15/out/arch/arm64/boot/Image* 2>/dev/null | head -n1 || true)
          if [ -z "$IMG" ]; then
            echo "‚ùå Kh√¥ng t√¨m th·∫•y kernel Image!"
            exit 1
          fi

          cp "$IMG" AnyKernel3/Image
          (cd kernel-5.15/out/arch/arm64/boot && cp -r dtb* ../../../../AnyKernel3/ || true)
          (cd kernel-5.15/out/arch/arm64/boot && cp -r dtbo* ../../../../AnyKernel3/ || true)

          cd AnyKernel3
          zip -r ../Kernel-A06-KSU-SUSFS.zip ./*

      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: Kernel-Outputs
          path: |
            kernel-5.15/out/.config
            kernel-5.15/out/arch/arm64/boot/Image*
            Kernel-A06-KSU-SUSFS.zip
            kernel-5.15/build.log
