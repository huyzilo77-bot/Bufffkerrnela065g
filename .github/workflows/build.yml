name: Build Samsung A06 Kernel (KSU Next + SUSFS)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      # B1: Checkout repo
      - name: Checkout repo
        uses: actions/checkout@v3

      # B2: Debug - in ra th∆∞ m·ª•c hi·ªán t·∫°i
      - name: Debug repo structure
        run: |
          echo "üìÇ Current Path: $(pwd)"
          echo "üìÇ Repo files:"
          ls -R . || true
          echo "üìÇ Check configs folder:"
          ls -R .github/configs || true

      # B3: C√†i dependencies
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            git wget curl build-essential bc bison flex \
            libssl-dev libncurses5-dev libelf-dev ccache unzip zip jq

      # B4: ƒê·ªçc file JSON (a06.json)
      - name: Parse config JSON
        id: parse
        run: |
          CONFIG_FILE=".github/configs/a06.json"
          if [ ! -f "$CONFIG_FILE" ]; then
            echo "‚ùå Config file $CONFIG_FILE not found!"
            exit 1
          fi

          KERNEL_REPO=$(jq -r '.repos[0].kernelSource.repo' $CONFIG_FILE)
          KERNEL_BRANCH=$(jq -r '.repos[0].kernelSource.branch' $CONFIG_FILE)
          DEFCONFIG=$(jq -r '.repos[0].kernelSource.defconfig' $CONFIG_FILE)

          echo "KERNEL_REPO=$KERNEL_REPO" >> $GITHUB_ENV
          echo "KERNEL_BRANCH=$KERNEL_BRANCH" >> $GITHUB_ENV
          echo "DEFCONFIG=$DEFCONFIG" >> $GITHUB_ENV

          echo "‚úÖ Parsed:"
          echo "Repo: $KERNEL_REPO"
          echo "Branch: $KERNEL_BRANCH"
          echo "Defconfig: $DEFCONFIG"

      # B5: Clone kernel source
      - name: Clone kernel source
        run: |
          echo "Cloning $KERNEL_REPO branch $KERNEL_BRANCH"
          git clone --depth=1 -b $KERNEL_BRANCH $KERNEL_REPO kernel || exit 1
          ls -la kernel

      # B6: Build th·ª≠ (ch∆∞a full, ch·ªâ test defconfig)
      - name: Test defconfig
        run: |
          cd kernel
          if [ -f Makefile ]; then
            echo "‚úÖ Kernel source ok, running defconfig..."
            make ARCH=arm64 $DEFCONFIG || true
          else
            echo "‚ùå Kernel source invalid (Makefile missing)"
            exit 1
          fi
