name: üì¶ Patch Samsung A06 Kernel with KernelSU + SUSFS

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: üì• Checkout Repo
        uses: actions/checkout@v4

      - name: üõ†Ô∏è Install Deps & Toolchains
        run: |
          sudo apt-get update
          sudo apt-get install -y git wget unzip build-essential bc \
            flex bison ccache libssl-dev make clang llvm lld \
            gcc-aarch64-linux-gnu g++-aarch64-linux-gnu

      - name: ‚ö° Setup ccache
        uses: actions/cache@v3
        with:
          path: ~/.ccache
          key: ${{ runner.os }}-ccache
          restore-keys: ${{ runner.os }}-ccache

      - name: üì• Download Samsung A06 Kernel Source
        run: |
          mkdir -p kernel-src
          cd kernel-src
          wget -q https://github.com/huyzilo77-bot/Bufffkerrnela065g/releases/download/V1/A066B-5G.zip -O kernel.zip
          unzip -q kernel.zip
          ls -la

      - name: üå± Detect Kernel Dir
        id: detect
        run: |
          cd kernel-src
          if [ -d kernel-5.15 ]; then
            echo "KERNEL_DIR=kernel-5.15" >> $GITHUB_ENV
          elif [ -d kernel ]; then
            echo "KERNEL_DIR=kernel" >> $GITHUB_ENV
          else
            echo "‚ùå Kh√¥ng t√¨m th·∫•y th∆∞ m·ª•c kernel"
            ls -la
            exit 1
          fi
          echo "‚úÖ Kernel dir = $KERNEL_DIR"

      - name: üì¶ Save Original Kernel
        run: |
          cp -r kernel-src/${KERNEL_DIR} kernel-src-original

      - name: ‚¨áÔ∏è Clone KernelSU-Next & SUSFS
        run: |
          git clone --depth=1 https://github.com/KernelSU-Next/KernelSU-Next.git ksu-next
          git clone --depth=1 https://github.com/sidex15/susfs4ksu-module.git susfs

      - name: üß© Apply KernelSU Patch
        run: |
          cd kernel-src/${KERNEL_DIR}
          bash ../../ksu-next/scripts/apply.sh || true

      - name: üß© Apply SUSFS Patch
        run: |
          cd kernel-src/${KERNEL_DIR}
          for p in ../../susfs/patches/*; do
            echo "‚ö° Applying $p"
            patch -p1 < "$p" || true
          done

      - name: üì¶ Save Patched Kernel
        run: |
          cp -r kernel-src/${KERNEL_DIR} kernel-src-patched

      - name: üì¶ Collect .rej Files
        run: |
          mkdir -p kernel-rejects
          find kernel-src/${KERNEL_DIR} -name "*.rej" -exec cp --parents {} kernel-rejects/ \; || true

      - name: ‚¨ÜÔ∏è Upload Original Kernel
        uses: actions/upload-artifact@v4
        with:
          name: kernel-original
          path: kernel-src-original

      - name: ‚¨ÜÔ∏è Upload Patched Kernel
        uses: actions/upload-artifact@v4
        with:
          name: kernel-patched
          path: kernel-src-patched

      - name: ‚¨ÜÔ∏è Upload Reject Files
        uses: actions/upload-artifact@v4
        with:
          name: kernel-rejects
          path: kernel-rejects
