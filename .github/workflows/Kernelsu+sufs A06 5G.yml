name: Build Samsung A06 5G Kernel + KernelSU + SUSFS (GKI + Cache)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      # Checkout repo để dùng workflow
      - name: ⚙️ Checkout Repo
        uses: actions/checkout@v4

      # Cài toolchain & deps
      - name: 🛠️ Install Deps & Toolchains
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            git wget unzip curl \
            gcc clang llvm lld \
            make bc bison flex \
            libssl-dev libncurses5-dev \
            ccache

      # Setup ccache
      - name: ⚡ Setup ccache
        uses: hendrikmuhs/ccache-action@v1
        with:
          max-size: 2G
          save: true

      # 📥 Tải kernel gốc Samsung A06
      - name: 📥 Download Samsung A06 Kernel Source
        run: |
          wget -O kernel.zip https://github.com/huyzilo77-bot/Bufffkerrnela065g/releases/download/V1/A066B-5G.zip
          unzip kernel.zip -d kernel
          ls -R kernel | head -50

      # Clone KernelSU-Next & SUSFS
      - name: 📦 Clone KernelSU-Next & SUSFS
        run: |
          git clone --depth=1 https://github.com/KernelSU/KernelSU-Next.git KernelSU-Next
          git clone --depth=1 https://github.com/sidex15/susfs4ksu-module.git susfs

      # Áp dụng bản vá KernelSU
      - name: 🧩 Apply KernelSU Patch
        run: |
          cd kernel/kernel-5.15
          bash ../../KernelSU-Next/kernel/setup.sh next

      # Áp dụng bản vá SUSFS
      - name: 🧩 Apply SUSFS Patch
        run: |
          cd kernel/kernel-5.15
          git apply --reject --whitespace=fix ../../susfs/*.patch || true

      # Lưu bản gốc, đã vá, và .rej nếu có
      - name: 💾 Save Original, Patched, Rejected
        run: |
          mkdir -p outputs/original outputs/patched outputs/rej
          cp -r kernel/kernel-5.15 outputs/original/
          cp -r kernel/kernel-5.15 outputs/patched/
          find kernel/kernel-5.15 -name "*.rej" -exec cp --parents {} outputs/rej/ \; || true

      # Build Kernel bằng Samsung build.sh (chuẩn GKI)
      - name: 🛠️ Build Kernel (Samsung GKI style)
        run: |
          cd kernel
          chmod +x build.sh
          export ARCH=arm64
          export SUBARCH=arm64
          export CC="ccache clang"
          export CROSS_COMPILE=aarch64-linux-gnu-
          ./build.sh
          ls -lh out/target/product/*/obj/KERNEL_OBJ/kernel-5.15/arch/arm64/boot/ || true

      # Debug output để kiểm tra Image
      - name: 🔍 Debug Kernel Output
        run: |
          find kernel -type f -name "Image*" || true

      # Chuẩn bị AnyKernel3
      - name: 📦 Clone AnyKernel3
        run: |
          git clone https://github.com/osm0sis/AnyKernel3.git AnyKernel3
          IMG=$(find kernel -type f -name "Image*" | head -n 1)
          if [ -n "$IMG" ]; then
            cp "$IMG" AnyKernel3/
          fi

      # Đóng gói AnyKernel3 flashable zip
      - name: 📦 Pack AnyKernel3
        run: |
          cd AnyKernel3
          zip -r9 ../A06-Kernel-KSU-SUSFS.zip . -x .git README.md *.zip

      # Upload artifacts
      - name: 📤 Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: A06-Kernel-Results
          path: |
            outputs/
            A06-Kernel-KSU-SUSFS.zip
