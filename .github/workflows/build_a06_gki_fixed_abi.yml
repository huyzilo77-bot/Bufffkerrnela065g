name: Build Samsung A06 5G Kernel 5.15 (KSU + SUSFS)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 150

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Free up disk space
        uses: AdityaGarg8/remove-unwanted-software@v5
        with:
          remove-android: true
          remove-dotnet: true
          remove-haskell: true
          remove-codeql: true
          remove-docker-images: true
          remove-large-packages: true
          remove-swapfile: true
          verbose: true

      - name: Install deps & toolchains
        run: |
          set -eux
          sudo apt update
          sudo apt install -y \
            git wget curl build-essential bc bison flex libssl-dev \
            libelf-dev ccache unzip python3 clang llvm lld dos2unix

      # ‚úÖ Setup ccache ƒë·ªÉ tƒÉng t·ªëc build
      - name: Setup ccache
        run: |
          export USE_CCACHE=1
          ccache -M 10G
          ccache -z

      - name: Cache ccache
        uses: actions/cache@v4
        with:
          path: ~/.ccache
          key: ${{ runner.os }}-ccache-${{ github.ref }}
          restore-keys: |
            ${{ runner.os }}-ccache-

      - name: Download Kernel Source (Samsung A06 Release)
        run: |
          set -eux
          mkdir kernel-src
          cd kernel-src
          wget -nv -O kernel.tar.gz "https://github.com/huyzilo77-bot/Bufffkernela065g/releases/download/V1/kernel-5.15.tar.gz"
          tar -xf kernel.tar.gz --strip-components=1
          ls -la

      - name: Clone AnyKernel3 & SUSFS
        run: |
          git clone https://github.com/osm0sis/AnyKernel3.git AnyKernel3
          git clone --depth=1 https://gitlab.com/simonpunk/susfs4ksu.git susfs

      - name: Apply KernelSU-Next
        run: |
          git clone https://github.com/KernelSU-Next/KernelSU-Next.git ksu-next
          cp -r ksu-next/* kernel-src/

      - name: Apply SUSFS patches
        run: |
          cp -r susfs/* kernel-src/

      - name: Select defconfig & fetch ABI
        run: |
          cd kernel-src
          make ARCH=arm64 a06x_defconfig

      - name: Fake prebuilts NDK
        run: |
          mkdir -p prebuilts/ndk
          echo "fake ndk ok"

      - name: Build Kernel (Samsung build.sh)
        run: |
          cd kernel-src
          bash build.sh

      # ‚úÖ Debug output tree ƒë·ªÉ check file Image
      - name: Debug build tree
        run: |
          echo "üìÇ Ki·ªÉm tra dist/"
          ls -R kernel-src/out/target/product/a06x/obj/KERNEL_OBJ/arch/arm64/boot || true
          ls -R kernel-src/out/target/product/a06x/obj/KERNEL_OBJ/dist || true

      - name: ƒê√≥ng g√≥i AnyKernel3 (KernelSU + SUSFS)
        run: |
          set -eux
          DIST_DIR=kernel-src/out/target/product/a06x/obj/KERNEL_OBJ/dist
          IMG=""

          if [ -f "$DIST_DIR/Image.gz" ]; then
            IMG=$DIST_DIR/Image.gz
          elif [ -f "$DIST_DIR/Image.lz4" ]; then
            IMG=$DIST_DIR/Image.lz4
          elif [ -f "$DIST_DIR/Image" ]; then
            IMG=$DIST_DIR/Image
          fi

          if [ -z "$IMG" ]; then
            echo "‚ùå Kh√¥ng t√¨m th·∫•y kernel Image trong $DIST_DIR"
            ls -la $DIST_DIR || true
            exit 1
          fi

          echo "‚úÖ ƒê√£ t√¨m th·∫•y kernel Image: $IMG"
          cp "$IMG" AnyKernel3/Image
          cp -r $DIST_DIR/dtbo* AnyKernel3/ || true

          cd AnyKernel3
          zip -r9 "../Kernel-A06-5.15.151-KSU-SUSFS.zip" . -x .git README.md *.zip
          echo "ZIPNAME=Kernel-A06-5.15.151-KSU-SUSFS.zip" >> $GITHUB_ENV

      # ‚úÖ Upload Artifact chia nh·ªè
      - name: Upload Kernel Zip
        uses: actions/upload-artifact@v4
        with:
          name: Kernel-Zip
          path: Kernel-A06-5.15.151-KSU-SUSFS.zip

      - name: Upload Boot Outputs
        uses: actions/upload-artifact@v4
        with:
          name: Boot-Outputs
          path: kernel-src/out/target/product/a06x/obj/KERNEL_OBJ/arch/arm64/boot/*

      - name: Upload Kernel Config
        uses: actions/upload-artifact@v4
        with:
          name: Kernel-Config
          path: kernel-src/.config

      - name: Upload ABI Symbollist
        uses: actions/upload-artifact@v4
        with:
          name: ABI-Symbollist
          path: kernel-src/android/abi_gki_aarch64*

      - name: Upload Build Log
        uses: actions/upload-artifact@v4
        with:
          name: Build-Log
          path: kernel-src/build.log
