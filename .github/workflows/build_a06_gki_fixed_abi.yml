name: Build Samsung A06 GKI Kernel

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Free up disk space
        run: |
          sudo rm -rf /usr/share/dotnet /usr/local/lib/android /opt/ghc
          sudo apt-get clean
          df -h

      - name: Install deps & toolchains
        run: |
          sudo apt-get update
          sudo apt-get install -y git wget curl unzip bc build-essential ccache \
            flex bison libssl-dev libncurses5-dev python3

      - name: Setup ccache
        run: |
          export USE_CCACHE=1
          ccache -M 10G
          ccache -z

      - name: Cache ccache
        uses: actions/cache@v4
        with:
          path: ~/.ccache
          key: ${{ runner.os }}-ccache-${{ github.ref }}
          restore-keys: |
            ${{ runner.os }}-ccache-

      - name: Download Kernel Source (Samsung A06 Release)
        run: |
          git clone https://github.com/ravindu644/android_kernel_m145f_common.git kernel-5.15 --depth=1

      - name: Cache AnyKernel3 & SUSFS
        uses: actions/cache@v4
        with:
          path: |
            AnyKernel3
            susfs
          key: ${{ runner.os }}-anykernel3-${{ github.ref }}
          restore-keys: |
            ${{ runner.os }}-anykernel3-

      - name: Clone/Update AnyKernel3 & SUSFS
        run: |
          if [ -d "AnyKernel3/.git" ]; then
            echo "🔄 Updating AnyKernel3..."
            cd AnyKernel3
            git fetch --depth=1 origin
            git reset --hard origin/master
            cd ..
          else
            rm -rf AnyKernel3
            git clone --depth=1 https://github.com/osm0sis/AnyKernel3.git AnyKernel3
          fi

          if [ -d "susfs/.git" ]; then
            echo "🔄 Updating SUSFS..."
            cd susfs
            git fetch --depth=1 origin
            git reset --hard origin/master
            cd ..
          else
            rm -rf susfs
            git clone --depth=1 https://gitlab.com/simonpunk/susfs4ksu.git susfs
          fi

      - name: Apply KernelSU-Next
        run: |
          cd kernel-5.15
          curl -LSs "https://raw.githubusercontent.com/KernelSU-Next/KernelSU-Next/main/kernel/setup.sh" \
            | bash -s -- --with-susfs

      - name: Apply SUSFS patches
        run: |
          cp -r susfs/* kernel-5.15/ || true

      - name: Select defconfig & fetch ABI
        run: |
          cd kernel-5.15
          make ARCH=arm64 a06x_defconfig

      - name: Force enable KernelSU & SUSFS configs
        run: |
          cd kernel-5.15
          if ! grep -q "CONFIG_KSU=y" .config; then
            echo 'CONFIG_KSU=y' >> .config
            echo "⚡ Ép bật CONFIG_KSU=y"
          fi
          if ! grep -q "CONFIG_SUSFS=y" .config; then
            echo 'CONFIG_SUSFS=y' >> .config
            echo "⚡ Ép bật CONFIG_SUSFS=y"
          fi
          make olddefconfig
          grep -E "CONFIG_KSU|CONFIG_SUSFS" .config || true

      - name: Fake prebuilts NDK
        run: |
          mkdir -p prebuilts/ndk
          echo "fake ndk ok"

      - name: Build Kernel (Samsung build.sh)
        run: |
          cd kernel-5.15
          bash build.sh || { echo "❌ Build.sh thất bại"; exit 1; }

      - name: Debug build tree
        run: |
          echo "📂 Kiểm tra dist/"
          ls -R kernel-5.15/out/target/product/a06x/obj/KERNEL_OBJ/arch/arm64/boot || true
          ls -R kernel-5.15/out/target/product/a06x/obj/KERNEL_OBJ/dist || true

      - name: Verify KernelSU & SUSFS in config
        run: |
          cd kernel-5.15/out
          grep -q "CONFIG_KSU=y" .config && echo "✅ CONFIG_KSU đã bật" || (echo "❌ Chưa bật KSU"; exit 1)
          grep -q "CONFIG_SUSFS=y" .config && echo "✅ CONFIG_SUSFS đã bật" || (echo "❌ Chưa bật SUSFS"; exit 1)

      - name: Package AnyKernel3 (KernelSU + SUSFS)
        run: |
          set -eux
          DIST_DIR=kernel-5.15/out/target/product/a06x/obj/KERNEL_OBJ/dist
          IMG=""
          if [ -f "$DIST_DIR/Image.gz" ]; then
            IMG=$DIST_DIR/Image.gz
          elif [ -f "$DIST_DIR/Image.lz4" ]; then
            IMG=$DIST_DIR/Image.lz4
          elif [ -f "$DIST_DIR/Image" ]; then
            IMG=$DIST_DIR/Image
          fi
          if [ -z "$IMG" ]; then
            echo "❌ Không tìm thấy kernel Image trong $DIST_DIR"
            exit 1
          fi
          cp "$IMG" AnyKernel3/Image
          cp -r $DIST_DIR/dtbo* AnyKernel3/ || true
          cd AnyKernel3
          zip -r9 "../Kernel-A06-5.15-KSU-SUSFS.zip" . -x .git README.md *.zip

      - name: Upload Kernel Zip
        uses: actions/upload-artifact@v4
        with:
          name: Kernel-Zip
          path: Kernel-A06-5.15-KSU-SUSFS.zip

      - name: Upload Boot Outputs
        uses: actions/upload-artifact@v4
        with:
          name: Boot-Outputs
          path: kernel-5.15/out/target/product/a06x/obj/KERNEL_OBJ/arch/arm64/boot/*

      - name: Upload Kernel Config
        uses: actions/upload-artifact@v4
        with:
          name: Kernel-Config
          path: kernel-5.15/out/.config

      - name: Upload ABI Symbollist
        uses: actions/upload-artifact@v4
        with:
          name: ABI-Symbollist
          path: kernel-5.15/out/abi_symbollist

      - name: Upload Build Log
        uses: actions/upload-artifact@v4
        with:
          name: Build-Log
          path: kernel-5.15/out/build.log

      # 🔥 Thêm bước xuất bản vá gốc, patch và .rej
      - name: Save Original Kernel Tree
        run: |
          zip -r ../Kernel-A06-Original.zip kernel-5.15

      - name: Generate Patch & Collect Rejects
        run: |
          cd kernel-5.15
          git init
          git add .
          git commit -m "Original kernel source"
          # áp lại patch để sinh .rej nếu lỗi
          git apply --reject ../susfs/*.patch || true
          cd ..
          git -C kernel-5.15 diff > Kernel-A06-KSU-SUSFS.patch
          zip -r Kernel-A06-Rejects.zip kernel-5.15/*.rej || true

      - name: Upload Original, Patch, Rejects
        uses: actions/upload-artifact@v4
        with:
          name: Kernel-Patches
          path: |
            Kernel-A06-Original.zip
            Kernel-A06-KSU-SUSFS.patch
            Kernel-A06-Rejects.zip

      - name: Post Cache ccache
        run: |
          ccache -s
