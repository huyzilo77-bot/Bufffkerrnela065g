name: Build Samsung A06 5G Kernel 5.15 (KSU + SUSFS)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 150

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Free up disk space
        uses: AdityaGarg8/remove-unwanted-software@v5
        with:
          remove-android: true
          remove-dotnet: true
          remove-haskell: true
          remove-codeql: true
          remove-docker-images: true
          remove-large-packages: true
          remove-swapfile: true
          verbose: true

      - name: Install deps & toolchains
        run: |
          set -eux
          sudo apt update
          sudo apt install -y software-properties-common
          sudo add-apt-repository ppa:ubuntu-toolchain-r/test -y
          sudo apt update
          sudo apt install -y \
            git curl wget unzip zip xz-utils zstd \
            build-essential bc bison flex \
            libelf-dev libssl-dev libarchive-tools \
            device-tree-compiler lz4 cpio rsync \
            llvm-16 clang-16 lld-16 \
            python3 python-is-python3 \
            gcc-aarch64-linux-gnu g++-aarch64-linux-gnu \
            gcc-arm-linux-gnueabi g++-arm-linux-gnueabi \
            pahole
          sudo update-alternatives --install /usr/bin/clang clang /usr/bin/clang-16 100
          sudo update-alternatives --install /usr/bin/ld.lld ld.lld /usr/bin/lld-16 100

      - name: Download Kernel Source
        run: |
          wget -O kernel_src.tar "https://github.com/huyzilo77-bot/Bufffkerrnela065g/releases/download/V1/kernel-5.15.tar"
          mkdir kernel-5.15
          tar -xf kernel_src.tar -C kernel-5.15 --strip-components=1
          chmod +x -R kernel-5.15 || true

      - name: Clone AnyKernel3 & SUSFS
        run: |
          git clone https://github.com/osm0sis/AnyKernel3.git AnyKernel3
          git clone -b gki-android13-5.15 https://gitlab.com/simonpunk/susfs4ksu.git susfs

      - name: Apply KernelSU-Next
        run: |
          cd kernel-5.15
          curl -LSs "https://raw.githubusercontent.com/KernelSU-Next/KernelSU-Next/next/kernel/setup.sh" \
            | bash -s -- -s next

      - name: Apply SUSFS patches
        run: |
          cd kernel-5.15
          patch -p1 --forward < ../susfs/kernel_patches/50_add_susfs_in_gki-android13-5.15.patch || true
          cp -r ../susfs/kernel_patches/fs/* fs/ || true
          cp -r ../susfs/kernel_patches/include/linux/* include/linux/ || true

      - name: Fix Kconfig encoding
        run: |
          cd kernel-5.15
          find drivers -name "Kconfig*" -type f -print0 | \
            xargs -0 sed -i "s/’/'/g; s/‘/'/g"
          find drivers -name "Kconfig*" -type f -print0 | \
            xargs -0 perl -i -pe 's/\x{00A0}/ /g; s/\x{FEFF}//g; s/\r$//'

      - name: Select defconfig & fetch ABI
        run: |
          set -eux
          cd kernel-5.15

          if [ -f arch/arm64/configs/a06x_00_defconfig ]; then
            DEFCONFIG=a06x_00_defconfig
          elif [ -f arch/arm64/configs/a06x_defconfig ]; then
            DEFCONFIG=a06x_defconfig
          else
            DEFCONFIG=gki_defconfig
          fi
          echo "✅ DEFCONFIG=$DEFCONFIG"

          git clone --depth=1 https://android.googlesource.com/kernel/common -b android13-5.15 gki-common
          ABI=$(ls gki-common/android/ | grep -E "abi_gki_aarch64_" | head -n1 || true)

          mkdir -p out
          if [ -n "$ABI" ]; then
            cp "gki-common/android/$ABI" out/abi_symbollist.raw
          else
            echo "" > out/abi_symbollist.raw
          fi

          make O=out ARCH=arm64 $DEFCONFIG
          make O=out ARCH=arm64 olddefconfig
          ./scripts/config --file out/.config -e KSU -e KSU_SUSFS || true
          ./scripts/config --file out/.config -d KSU_KPROBES_HOOK || true
          make O=out ARCH=arm64 olddefconfig

      - name: Build Kernel
        run: |
          set -eux
          cd kernel-5.15
          ( make -j$(nproc --all) O=out ARCH=arm64 \
            CC=clang CROSS_COMPILE=aarch64-linux-gnu- CROSS_COMPILE_COMPAT=arm-linux-gnueabi- \
            LD=ld.lld \
            Image.gz-dtb dtbs modules 2>&1 | tee build.log )
          test ${PIPESTATUS[0]} -eq 0
          ls -la out/arch/arm64/boot || true

      - name: Pack AnyKernel3 zip
        run: |
          set -eux
          OUTDIR=kernel-5.15/out/arch/arm64/boot
          IMG=""
          if [ -f "$OUTDIR/Image.gz-dtb" ]; then
            IMG="$OUTDIR/Image.gz-dtb"
          elif [ -f "$OUTDIR/Image.gz" ]; then
            IMG="$OUTDIR/Image.gz"
          elif [ -f "$OUTDIR/Image" ]; then
            IMG="$OUTDIR/Image"
          fi

          if [ -z "$IMG" ]; then
            echo "❌ Kernel Image not found!"
            exit 1
          fi

          cp "$IMG" AnyKernel3/zImage
          (cd $OUTDIR && cp -r dtb* ../../../../AnyKernel3/ || true)
          (cd $OUTDIR && cp -r dtbo* ../../../../AnyKernel3/ || true)

          cd AnyKernel3
          zip -r ../Kernel-A06-5.15-KSU-SUSFS.zip ./*

      - name: Patch init_boot.img
        run: |
          set -eux
          if [ ! -f init_boot.img.lz4 ]; then
            echo "⚠️ Thiếu file init_boot.img.lz4 trong repo để patch"
            exit 0
          fi

          lz4 -d init_boot.img.lz4 init_boot.img

          git clone https://github.com/osm0sis/Android-Image-Kitchen.git AIK
          cd AIK
          ./unpackimg.sh ../init_boot.img

          OUTDIR=../kernel-5.15/out/arch/arm64/boot
          if [ -f "$OUTDIR/Image.gz-dtb" ]; then
            cp "$OUTDIR/Image.gz-dtb" split_img/boot.img-kernel
          elif [ -f "$OUTDIR/Image.gz" ]; then
            cp "$OUTDIR/Image.gz" split_img/boot.img-kernel
          elif [ -f "$OUTDIR/Image" ]; then
            cp "$OUTDIR/Image" split_img/boot.img-kernel
          fi

          ./repackimg.sh
          mv image-new.img ../init_boot_patched.img

      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: Kernel-Outputs-A06
          path: |
            kernel-5.15/build.log
            kernel-5.15/out/.config
            kernel-5.15/out/arch/arm64/boot/*
            Kernel-A06-5.15-KSU-SUSFS.zip
            init_boot_patched.img
